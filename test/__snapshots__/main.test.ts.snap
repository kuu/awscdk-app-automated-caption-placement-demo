// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
{
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs20.x",
      },
      "ap-east-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-2": {
        "value": "nodejs20.x",
      },
      "ap-northeast-3": {
        "value": "nodejs20.x",
      },
      "ap-south-1": {
        "value": "nodejs20.x",
      },
      "ap-south-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-1": {
        "value": "nodejs20.x",
      },
      "ap-southeast-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-3": {
        "value": "nodejs20.x",
      },
      "ap-southeast-4": {
        "value": "nodejs20.x",
      },
      "ap-southeast-5": {
        "value": "nodejs20.x",
      },
      "ap-southeast-7": {
        "value": "nodejs20.x",
      },
      "ca-central-1": {
        "value": "nodejs20.x",
      },
      "ca-west-1": {
        "value": "nodejs20.x",
      },
      "cn-north-1": {
        "value": "nodejs18.x",
      },
      "cn-northwest-1": {
        "value": "nodejs18.x",
      },
      "eu-central-1": {
        "value": "nodejs20.x",
      },
      "eu-central-2": {
        "value": "nodejs20.x",
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x",
      },
      "eu-north-1": {
        "value": "nodejs20.x",
      },
      "eu-south-1": {
        "value": "nodejs20.x",
      },
      "eu-south-2": {
        "value": "nodejs20.x",
      },
      "eu-west-1": {
        "value": "nodejs20.x",
      },
      "eu-west-2": {
        "value": "nodejs20.x",
      },
      "eu-west-3": {
        "value": "nodejs20.x",
      },
      "il-central-1": {
        "value": "nodejs20.x",
      },
      "me-central-1": {
        "value": "nodejs20.x",
      },
      "me-south-1": {
        "value": "nodejs20.x",
      },
      "mx-central-1": {
        "value": "nodejs20.x",
      },
      "sa-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-2": {
        "value": "nodejs20.x",
      },
      "us-gov-east-1": {
        "value": "nodejs18.x",
      },
      "us-gov-west-1": {
        "value": "nodejs18.x",
      },
      "us-iso-east-1": {
        "value": "nodejs18.x",
      },
      "us-iso-west-1": {
        "value": "nodejs18.x",
      },
      "us-isob-east-1": {
        "value": "nodejs18.x",
      },
      "us-west-1": {
        "value": "nodejs20.x",
      },
      "us-west-2": {
        "value": "nodejs20.x",
      },
    },
  },
  "Outputs": {
    "EventBridgeRuleName": {
      "Description": "EventBridge rule name",
      "Export": {
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "EventBridgeRuleName",
            ],
          ],
        },
      },
      "Value": {
        "Ref": "S3EventRuleD53D09BD",
      },
    },
    "InputBucket": {
      "Description": "S3 bucket for input files",
      "Export": {
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "InputBucket",
            ],
          ],
        },
      },
      "Value": "s3://e7a353ff-e440-4cda-aebd-940ffa81901f/",
    },
    "OutputBucket": {
      "Description": "S3 bucket for output files",
      "Export": {
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "OutputBucket",
            ],
          ],
        },
      },
      "Value": "s3://59285050-6235-4751-90b9-e887c6806fec/",
    },
    "PlaybackUrl1": {
      "Description": "HLS video playback URL for the original captions",
      "Export": {
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "PlaybackUrl1",
            ],
          ],
        },
      },
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::GetAtt": [
                "Distribution830FAC52",
                "DomainName",
              ],
            },
            "/original-caption/index.m3u8",
          ],
        ],
      },
    },
    "PlaybackUrl2": {
      "Description": "HLS video playback URL for the styled captions",
      "Export": {
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "PlaybackUrl2",
            ],
          ],
        },
      },
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::GetAtt": [
                "Distribution830FAC52",
                "DomainName",
              ],
            },
            "/styled-caption/index.m3u8",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "592850506235475190b9e887c6806fecAutoDeleteObjectsCustomResource19E0157A": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "592850506235475190b9e887c6806fecPolicyAE86F6A8",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "592850506235475190b9e887c6806fecD3824C20",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "592850506235475190b9e887c6806fecD3824C20": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "BucketName": "59285050-6235-4751-90b9-e887c6806fec",
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "592850506235475190b9e887c6806fecPolicyAE86F6A8": {
      "Properties": {
        "Bucket": {
          "Ref": "592850506235475190b9e887c6806fecD3824C20",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "592850506235475190b9e887c6806fecD3824C20",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "592850506235475190b9e887c6806fecD3824C20",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "OAIE1EFC67F",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "592850506235475190b9e887c6806fecD3824C20",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
      "DependsOn": [
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
      ],
      "Properties": {
        "Code": {
          "ZipFile": "import boto3  # type: ignore
import json
import logging
import urllib.request

s3 = boto3.client("s3")

EVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'
CONFIGURATION_TYPES = ["TopicConfigurations", "QueueConfigurations", "LambdaFunctionConfigurations"]

def handler(event: dict, context):
  response_status = "SUCCESS"
  error_message = ""
  try:
    props = event["ResourceProperties"]
    notification_configuration = props["NotificationConfiguration"]
    managed = props.get('Managed', 'true').lower() == 'true'
    skipDestinationValidation = props.get('SkipDestinationValidation', 'false').lower() == 'true'
    stack_id = event['StackId']
    old = event.get("OldResourceProperties", {}).get("NotificationConfiguration", {})
    if managed:
      config = handle_managed(event["RequestType"], notification_configuration)
    else:
      config = handle_unmanaged(props["BucketName"], stack_id, event["RequestType"], notification_configuration, old)
    s3.put_bucket_notification_configuration(Bucket=props["BucketName"], NotificationConfiguration=config, SkipDestinationValidation=skipDestinationValidation)
  except Exception as e:
    logging.exception("Failed to put bucket notification configuration")
    response_status = "FAILED"
    error_message = f"Error: {str(e)}. "
  finally:
    submit_response(event, context, response_status, error_message)

def handle_managed(request_type, notification_configuration):
  if request_type == 'Delete':
    return {}
  return notification_configuration

def handle_unmanaged(bucket, stack_id, request_type, notification_configuration, old):
  def get_id(n):
    n['Id'] = ''
    sorted_notifications = sort_filter_rules(n)
    strToHash=json.dumps(sorted_notifications, sort_keys=True).replace('"Name": "prefix"', '"Name": "Prefix"').replace('"Name": "suffix"', '"Name": "Suffix"')
    return f"{stack_id}-{hash(strToHash)}"
  def with_id(n):
    n['Id'] = get_id(n)
    return n

  external_notifications = {}
  existing_notifications = s3.get_bucket_notification_configuration(Bucket=bucket)
  for t in CONFIGURATION_TYPES:
    if request_type == 'Update':
        old_incoming_ids = [get_id(n) for n in old.get(t, [])]
        external_notifications[t] = [n for n in existing_notifications.get(t, []) if not get_id(n) in old_incoming_ids]      
    elif request_type == 'Delete':
        external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f"{stack_id}-")]
    elif request_type == 'Create':
        external_notifications[t] = [n for n in existing_notifications.get(t, [])]
  if EVENTBRIDGE_CONFIGURATION in existing_notifications:
    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]

  if request_type == 'Delete':
    return external_notifications

  notifications = {}
  for t in CONFIGURATION_TYPES:
    external = external_notifications.get(t, [])
    incoming = [with_id(n) for n in notification_configuration.get(t, [])]
    notifications[t] = external + incoming

  if EVENTBRIDGE_CONFIGURATION in notification_configuration:
    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]
  elif EVENTBRIDGE_CONFIGURATION in external_notifications:
    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]

  return notifications

def submit_response(event: dict, context, response_status: str, error_message: str):
  response_body = json.dumps(
    {
      "Status": response_status,
      "Reason": f"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}",
      "PhysicalResourceId": event.get("PhysicalResourceId") or event["LogicalResourceId"],
      "StackId": event["StackId"],
      "RequestId": event["RequestId"],
      "LogicalResourceId": event["LogicalResourceId"],
      "NoEcho": False,
    }
  ).encode("utf-8")
  headers = {"content-type": "", "content-length": str(len(response_body))}
  try:
    req = urllib.request.Request(url=event["ResponseURL"], headers=headers, data=response_body, method="PUT")
    with urllib.request.urlopen(req) as response:
      print(response.read().decode("utf-8"))
    print("Status code: " + response.reason)
  except Exception as e:
      print("send(..) failed executing request.urlopen(..): " + str(e))

def sort_filter_rules(json_obj):
  if not isinstance(json_obj, dict):
      return json_obj
  for key, value in json_obj.items():
      if isinstance(value, dict):
          json_obj[key] = sort_filter_rules(value)
      elif isinstance(value, list):
          json_obj[key] = [sort_filter_rules(item) for item in value]
  if "Filter" in json_obj and "Key" in json_obj["Filter"] and "FilterRules" in json_obj["Filter"]["Key"]:
      filter_rules = json_obj["Filter"]["Key"]["FilterRules"]
      sorted_filter_rules = sorted(filter_rules, key=lambda x: x["Name"])
      json_obj["Filter"]["Key"]["FilterRules"] = sorted_filter_rules
  return json_obj",
        },
        "Description": "AWS CloudFormation handler for "Custom::S3BucketNotifications" resources (@aws-cdk/aws-s3)",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": [
          {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "e7a353ffe4404cdaaebd940ffa81901f57F65707",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Distribution830FAC52": {
      "Properties": {
        "DistributionConfig": {
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD",
              "OPTIONS",
            ],
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "CachedMethods": [
              "GET",
              "HEAD",
              "OPTIONS",
            ],
            "Compress": true,
            "TargetOriginId": "testDistributionOrigin1F4407531",
            "ViewerProtocolPolicy": "allow-all",
          },
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "592850506235475190b9e887c6806fecD3824C20",
                  "RegionalDomainName",
                ],
              },
              "Id": "testDistributionOrigin1F4407531",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "OAIE1EFC67F",
                      },
                    ],
                  ],
                },
              },
            },
          ],
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "FaceDetectionJobAmazonRekognitionFaceDetectionComplete2C6D58B7": {
      "Properties": {
        "TopicName": "AmazonRekognitionFaceDetectionComplete",
      },
      "Type": "AWS::SNS::Topic",
    },
    "FaceDetectionJobFaceDetectionLambdaIamRoleForRekognition9AE8543E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "rekognition.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonS3FullAccess",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSNSFullAccess",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSQSFullAccess",
              ],
            ],
          },
          "arn:aws:iam::aws:policy/service-role/AmazonRekognitionServiceRole",
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FaceDetectionJobFaceDetectionQueue7704E1E5": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "VisibilityTimeout": 300,
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "FaceDetectionJobFaceDetectionQueuePolicy96F5097B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Ref": "FaceDetectionJobAmazonRekognitionFaceDetectionComplete2C6D58B7",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "sns.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "FaceDetectionJobFaceDetectionQueue7704E1E5",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "FaceDetectionJobFaceDetectionQueue7704E1E5",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "FaceDetectionJobFaceDetectionQueuetestFaceDetectionJobAmazonRekognitionFaceDetectionCompleteC5A71097CDC4F355": {
      "DependsOn": [
        "FaceDetectionJobFaceDetectionQueuePolicy96F5097B",
      ],
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "FaceDetectionJobFaceDetectionQueue7704E1E5",
            "Arn",
          ],
        },
        "Protocol": "sqs",
        "TopicArn": {
          "Ref": "FaceDetectionJobAmazonRekognitionFaceDetectionComplete2C6D58B7",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "FaceDetectionJobGetFaceRekognitionFunctionFaceDetectionLambda32C5F5E8": {
      "DependsOn": [
        "FaceDetectionJobGetFaceRekognitionFunctionFaceDetectionLambdaServiceRoleDefaultPolicyC4D2E41E",
        "FaceDetectionJobGetFaceRekognitionFunctionFaceDetectionLambdaServiceRole860DB513",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "29a76ba5214fe1c587381a4b6bacb2f5f862c2226553a285718ee9cb3c80e14f.zip",
        },
        "Environment": {
          "Variables": {
            "NODE_ENV": "test",
            "OUTPUT_BUCKET_NAME": {
              "Ref": "592850506235475190b9e887c6806fecD3824C20",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "FaceDetectionJobGetFaceRekognitionFunctionFaceDetectionLambdaServiceRole860DB513",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "FaceDetectionJobGetFaceRekognitionFunctionFaceDetectionLambdaLogRetention39C531BC": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "FaceDetectionJobGetFaceRekognitionFunctionFaceDetectionLambda32C5F5E8",
              },
            ],
          ],
        },
        "RetentionInDays": 14,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "FaceDetectionJobGetFaceRekognitionFunctionFaceDetectionLambdaServiceRole860DB513": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FaceDetectionJobGetFaceRekognitionFunctionFaceDetectionLambdaServiceRoleDefaultPolicyC4D2E41E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "rekognition:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "s3:*",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FaceDetectionJobGetFaceRekognitionFunctionFaceDetectionLambdaServiceRoleDefaultPolicyC4D2E41E",
        "Roles": [
          {
            "Ref": "FaceDetectionJobGetFaceRekognitionFunctionFaceDetectionLambdaServiceRole860DB513",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FaceDetectionJobPollFaceRekognitionFunctionFaceDetectionLambda534C1F28": {
      "DependsOn": [
        "FaceDetectionJobPollFaceRekognitionFunctionFaceDetectionLambdaServiceRoleDefaultPolicy0EF68EFD",
        "FaceDetectionJobPollFaceRekognitionFunctionFaceDetectionLambdaServiceRole36DA9185",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "8d36e8e4b38e63077076bf2f62be0907fea0a0d79151d8e87d37e1238738107c.zip",
        },
        "Environment": {
          "Variables": {
            "NODE_ENV": "test",
            "SQS_QUEUE_URL": {
              "Ref": "FaceDetectionJobFaceDetectionQueue7704E1E5",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "FaceDetectionJobPollFaceRekognitionFunctionFaceDetectionLambdaServiceRole36DA9185",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "FaceDetectionJobPollFaceRekognitionFunctionFaceDetectionLambdaLogRetention7704F0FB": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "FaceDetectionJobPollFaceRekognitionFunctionFaceDetectionLambda534C1F28",
              },
            ],
          ],
        },
        "RetentionInDays": 14,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "FaceDetectionJobPollFaceRekognitionFunctionFaceDetectionLambdaServiceRole36DA9185": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FaceDetectionJobPollFaceRekognitionFunctionFaceDetectionLambdaServiceRoleDefaultPolicy0EF68EFD": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FaceDetectionJobPollFaceRekognitionFunctionFaceDetectionLambdaServiceRoleDefaultPolicy0EF68EFD",
        "Roles": [
          {
            "Ref": "FaceDetectionJobPollFaceRekognitionFunctionFaceDetectionLambdaServiceRole36DA9185",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FaceDetectionJobStartFaceRekognitionFunctionFaceDetectionLambda3FB7A52B": {
      "DependsOn": [
        "FaceDetectionJobStartFaceRekognitionFunctionFaceDetectionLambdaServiceRoleDefaultPolicy855C5311",
        "FaceDetectionJobStartFaceRekognitionFunctionFaceDetectionLambdaServiceRole8B0ACFE2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "1336ce33f2fcbefd4e8d1031e0d99113595a67a96cd2230fa81edd47c1591688.zip",
        },
        "Environment": {
          "Variables": {
            "INPUT_BUCKET_NAME": {
              "Ref": "e7a353ffe4404cdaaebd940ffa81901f57F65707",
            },
            "NODE_ENV": "test",
            "ROLE_ARN_TO_ALLOW_REKOGNITION_TO_PUBLISH_TO_SNS_TOPIC": {
              "Fn::GetAtt": [
                "FaceDetectionJobFaceDetectionLambdaIamRoleForRekognition9AE8543E",
                "Arn",
              ],
            },
            "SNS_TOPIC_ARN_TO_BE_NOTIFIED_OF_COMPLETION": {
              "Ref": "FaceDetectionJobAmazonRekognitionFaceDetectionComplete2C6D58B7",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "FaceDetectionJobStartFaceRekognitionFunctionFaceDetectionLambdaServiceRole8B0ACFE2",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "FaceDetectionJobStartFaceRekognitionFunctionFaceDetectionLambdaLogRetention8F1F8041": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "FaceDetectionJobStartFaceRekognitionFunctionFaceDetectionLambda3FB7A52B",
              },
            ],
          ],
        },
        "RetentionInDays": 14,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "FaceDetectionJobStartFaceRekognitionFunctionFaceDetectionLambdaServiceRole8B0ACFE2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FaceDetectionJobStartFaceRekognitionFunctionFaceDetectionLambdaServiceRoleDefaultPolicy855C5311": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "rekognition:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FaceDetectionJobFaceDetectionLambdaIamRoleForRekognition9AE8543E",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FaceDetectionJobStartFaceRekognitionFunctionFaceDetectionLambdaServiceRoleDefaultPolicy855C5311",
        "Roles": [
          {
            "Ref": "FaceDetectionJobStartFaceRekognitionFunctionFaceDetectionLambdaServiceRole8B0ACFE2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IamRoleForMediaConvertOriginalcaptions83A51633": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "mediaconvert.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonS3FullAccess",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonAPIGatewayInvokeFullAccess",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IamRoleForMediaConvertStyledcaptionsEFE5032B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "mediaconvert.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonS3FullAccess",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonAPIGatewayInvokeFullAccess",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "2819175352ad1ce0dae768e83fc328fb70fb5f10b4a8ff0ccbcb791f02b0716d.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "OAIE1EFC67F": {
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "OAI for CloudFront to access private S3 bucket",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "S3EventRuleD53D09BD": {
      "Properties": {
        "EventPattern": {
          "detail-type": [
            "Object Created",
          ],
          "resources": [
            {
              "Fn::GetAtt": [
                "e7a353ffe4404cdaaebd940ffa81901f57F65707",
                "Arn",
              ],
            },
          ],
          "source": [
            "aws.s3",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "StateMachine2E01A3A5",
            },
            "Id": "Target0",
            "InputTransformer": {
              "InputPathsMap": {
                "detail-object-key": "$.detail.object.key",
                "time": "$.time",
              },
              "InputTemplate": "{"s3Object":{"time":<time>,"key":<detail-object-key>}}",
            },
            "RoleArn": {
              "Fn::GetAtt": [
                "StateMachineEventsRoleDBCDECD1",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "StateMachine2E01A3A5": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "StateMachineRoleDefaultPolicyDF1E6607",
        "StateMachineRoleB840431D",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"Run AI jobs","States":{"Run AI jobs":{"Type":"Parallel","ResultPath":"$.Payload","Next":"Add styles to caption file","Branches":[{"StartAt":"Start Transcribe Job","States":{"Start Transcribe Job":{"Type":"Pass","ResultPath":"$.Payload","InputPath":"$","Next":"Invoke StartTranscriptionJob API"},"Invoke StartTranscriptionJob API":{"Next":"Wait for Transcribe","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","InputPath":"$.Payload","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "TranscribeJobStartTranscribeFunctionTranscribeLambdaCDD50764",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}},"Wait for Transcribe":{"Type":"Wait","Seconds":5,"Next":"Invoke GetTranscriptionJob API"},"Invoke GetTranscriptionJob API":{"Next":"Check if Transcribe is completed","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","InputPath":"$.Payload","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "TranscribeJobGetTranscribeFunctionTranscribeLambdaCBE9E409",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}},"Check if Transcribe is completed":{"Type":"Choice","Choices":[{"Variable":"$.Payload.status","StringEquals":"COMPLETED","Next":"Transcribe Succeeded"},{"Variable":"$.Payload.status","StringEquals":"FAILED","Next":"Transcribe Failed"}],"Default":"Wait for Transcribe"},"Transcribe Succeeded":{"Type":"Succeed"},"Transcribe Failed":{"Type":"Fail"}}},{"StartAt":"Start Face Detection Job","States":{"Start Face Detection Job":{"Type":"Pass","ResultPath":"$.Payload","InputPath":"$","Next":"Invoke StartFaceDetection API"},"Invoke StartFaceDetection API":{"Next":"Wait for Face Detection","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","InputPath":"$.Payload","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "FaceDetectionJobStartFaceRekognitionFunctionFaceDetectionLambda3FB7A52B",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}},"Wait for Face Detection":{"Type":"Wait","Seconds":5,"Next":"Monitor SQS for Face"},"Monitor SQS for Face":{"Next":"Check if Face Detection is completed","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","InputPath":"$.Payload","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "FaceDetectionJobPollFaceRekognitionFunctionFaceDetectionLambda534C1F28",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}},"Check if Face Detection is completed":{"Type":"Choice","Choices":[{"Variable":"$.Payload.MessageCount","NumericGreaterThan":0,"Next":"Invoke GetFaceDetection API"}],"Default":"Wait for Face Detection"},"Invoke GetFaceDetection API":{"End":true,"Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","InputPath":"$.Payload","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "FaceDetectionJobGetFaceRekognitionFunctionFaceDetectionLambda32C5F5E8",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}}}},{"StartAt":"Start Text Detection Job","States":{"Start Text Detection Job":{"Type":"Pass","ResultPath":"$.Payload","InputPath":"$","Next":"Invoke StartTextDetection API"},"Invoke StartTextDetection API":{"Next":"Wait for Text Detection","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","InputPath":"$.Payload","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "TextDetectionJobStartTextRekognitionFunctionTextDetectionLambda274E9759",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}},"Wait for Text Detection":{"Type":"Wait","Seconds":5,"Next":"Monitor SQS for Text"},"Monitor SQS for Text":{"Next":"Check if Text Detection is completed","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","InputPath":"$.Payload","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "TextDetectionJobPollTextRekognitionFunctionTextDetectionLambda3ED9C32A",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}},"Check if Text Detection is completed":{"Type":"Choice","Choices":[{"Variable":"$.Payload.MessageCount","NumericGreaterThan":0,"Next":"Invoke GetTextDetection API"}],"Default":"Wait for Text Detection"},"Invoke GetTextDetection API":{"End":true,"Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","InputPath":"$.Payload","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "TextDetectionJobGetTextRekognitionFunctionTextDetectionLambda9A851EBD",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}}}}],"ResultSelector":{"input":{"videoS3Object.$":"$[1].Payload.input.s3Object","videoMetadata.$":"$[1].Payload.input.videoMetadata"},"output":{"captionUrl.$":"$[0].Payload.output.subtitleUrl","transcribeUrl.$":"$[0].Payload.output.transcriptUrl","faceDetectionS3Object.$":"$[1].Payload.output.s3Object","textDetectionS3Object.$":"$[2].Payload.output.s3Object"}}},"Add styles to caption file":{"Next":"Run MediaConvert jobs","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","InputPath":"$.Payload","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "VttFunctionVttLambdaC532D846",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}},"Run MediaConvert jobs":{"Type":"Parallel","End":true,"Branches":[{"StartAt":"Run MediaConvert Job - Original captions","States":{"Run MediaConvert Job - Original captions":{"End":true,"Type":"Task","InputPath":"$.Payload","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::mediaconvert:createJob","Parameters":{"Role":"",
              {
                "Fn::GetAtt": [
                  "IamRoleForMediaConvertOriginalcaptions83A51633",
                  "Arn",
                ],
              },
              "","Settings":{"Inputs":[{"FileInput.$":"States.Format('s3://",
              {
                "Ref": "e7a353ffe4404cdaaebd940ffa81901f57F65707",
              },
              "/{}', $.video)","VideoSelector":{},"AudioSelectors":{"Audio Selector 1":{"DefaultSelection":"DEFAULT"}},"CaptionSelectors":{"Captions Selector 1":{"SourceSettings":{"SourceType":"WEBVTT","FileSourceSettings":{"SourceFile.$":"States.Format('s3://",
              {
                "Ref": "592850506235475190b9e887c6806fecD3824C20",
              },
              "/{}', $.originalCaption)"}}}},"TimecodeSource":"ZEROBASED"}],"OutputGroups":[{"Name":"Apple HLS","OutputGroupSettings":{"Type":"HLS_GROUP_SETTINGS","HlsGroupSettings":{"SegmentLength":6,"Destination":"s3://",
              {
                "Ref": "592850506235475190b9e887c6806fecD3824C20",
              },
              "/original-caption/index","MinSegmentLength":0}},"Outputs":[{"ContainerSettings":{"Container":"M3U8","M3u8Settings":{}},"VideoDescription":{"CodecSettings":{"Codec":"H_264","H264Settings":{"MaxBitrate":1500000,"RateControlMode":"QVBR","SceneChangeDetect":"TRANSITION_DETECTION"}}},"AudioDescriptions":[{"AudioSourceName":"Audio Selector 1","CodecSettings":{"Codec":"AAC","AacSettings":{"Bitrate":96000,"CodingMode":"CODING_MODE_2_0","SampleRate":48000}}}],"OutputSettings":{"HlsSettings":{}},"NameModifier":"_main"},{"ContainerSettings":{"Container":"M3U8","M3u8Settings":{}},"OutputSettings":{"HlsSettings":{}},"NameModifier":"_caption","CaptionDescriptions":[{"CaptionSelectorName":"Captions Selector 1","DestinationSettings":{"DestinationType":"WEBVTT","WebvttDestinationSettings":{"StylePassthrough":"ENABLED"}},"LanguageCode":"ENG"}]}]}],"TimecodeConfig":{"Source":"ZEROBASED"},"FollowSource":1},"AccelerationSettings":{"Mode":"DISABLED"},"StatusUpdateInterval":"SECONDS_60","Priority":0}}}},{"StartAt":"Run MediaConvert Job - Styled captions","States":{"Run MediaConvert Job - Styled captions":{"End":true,"Type":"Task","InputPath":"$.Payload","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::mediaconvert:createJob","Parameters":{"Role":"",
              {
                "Fn::GetAtt": [
                  "IamRoleForMediaConvertStyledcaptionsEFE5032B",
                  "Arn",
                ],
              },
              "","Settings":{"Inputs":[{"FileInput.$":"States.Format('s3://",
              {
                "Ref": "e7a353ffe4404cdaaebd940ffa81901f57F65707",
              },
              "/{}', $.video)","VideoSelector":{},"AudioSelectors":{"Audio Selector 1":{"DefaultSelection":"DEFAULT"}},"CaptionSelectors":{"Captions Selector 1":{"SourceSettings":{"SourceType":"WEBVTT","FileSourceSettings":{"SourceFile.$":"States.Format('s3://",
              {
                "Ref": "592850506235475190b9e887c6806fecD3824C20",
              },
              "/{}', $.styledCaption)"}}}},"TimecodeSource":"ZEROBASED"}],"OutputGroups":[{"Name":"Apple HLS","OutputGroupSettings":{"Type":"HLS_GROUP_SETTINGS","HlsGroupSettings":{"SegmentLength":6,"Destination":"s3://",
              {
                "Ref": "592850506235475190b9e887c6806fecD3824C20",
              },
              "/styled-caption/index","MinSegmentLength":0}},"Outputs":[{"ContainerSettings":{"Container":"M3U8","M3u8Settings":{}},"VideoDescription":{"CodecSettings":{"Codec":"H_264","H264Settings":{"MaxBitrate":1500000,"RateControlMode":"QVBR","SceneChangeDetect":"TRANSITION_DETECTION"}}},"AudioDescriptions":[{"AudioSourceName":"Audio Selector 1","CodecSettings":{"Codec":"AAC","AacSettings":{"Bitrate":96000,"CodingMode":"CODING_MODE_2_0","SampleRate":48000}}}],"OutputSettings":{"HlsSettings":{}},"NameModifier":"_main"},{"ContainerSettings":{"Container":"M3U8","M3u8Settings":{}},"OutputSettings":{"HlsSettings":{}},"NameModifier":"_caption","CaptionDescriptions":[{"CaptionSelectorName":"Captions Selector 1","DestinationSettings":{"DestinationType":"WEBVTT","WebvttDestinationSettings":{"StylePassthrough":"ENABLED"}},"LanguageCode":"ENG"}]}]}],"TimecodeConfig":{"Source":"ZEROBASED"},"FollowSource":1},"AccelerationSettings":{"Mode":"DISABLED"},"StatusUpdateInterval":"SECONDS_60","Priority":0}}}}]}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "StateMachineRoleB840431D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "StateMachineEventsRoleDBCDECD1": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "StateMachineEventsRoleDefaultPolicyFB602CA9": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "StateMachine2E01A3A5",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StateMachineEventsRoleDefaultPolicyFB602CA9",
        "Roles": [
          {
            "Ref": "StateMachineEventsRoleDBCDECD1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StateMachineRoleB840431D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "StateMachineRoleDefaultPolicyDF1E6607": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "VttFunctionVttLambdaC532D846",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "VttFunctionVttLambdaC532D846",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "iam:PassRole",
              "Condition": {
                "StringLike": {
                  "iam:PassedToService": "mediaconvert.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IamRoleForMediaConvertOriginalcaptions83A51633",
                  "Arn",
                ],
              },
            },
            {
              "Action": "mediaconvert:CreateJob",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "iam:PassRole",
              "Condition": {
                "StringLike": {
                  "iam:PassedToService": "mediaconvert.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IamRoleForMediaConvertStyledcaptionsEFE5032B",
                  "Arn",
                ],
              },
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TranscribeJobStartTranscribeFunctionTranscribeLambdaCDD50764",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TranscribeJobStartTranscribeFunctionTranscribeLambdaCDD50764",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TranscribeJobGetTranscribeFunctionTranscribeLambdaCBE9E409",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TranscribeJobGetTranscribeFunctionTranscribeLambdaCBE9E409",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FaceDetectionJobStartFaceRekognitionFunctionFaceDetectionLambda3FB7A52B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FaceDetectionJobStartFaceRekognitionFunctionFaceDetectionLambda3FB7A52B",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FaceDetectionJobPollFaceRekognitionFunctionFaceDetectionLambda534C1F28",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FaceDetectionJobPollFaceRekognitionFunctionFaceDetectionLambda534C1F28",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FaceDetectionJobGetFaceRekognitionFunctionFaceDetectionLambda32C5F5E8",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FaceDetectionJobGetFaceRekognitionFunctionFaceDetectionLambda32C5F5E8",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TextDetectionJobStartTextRekognitionFunctionTextDetectionLambda274E9759",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TextDetectionJobStartTextRekognitionFunctionTextDetectionLambda274E9759",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TextDetectionJobPollTextRekognitionFunctionTextDetectionLambda3ED9C32A",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TextDetectionJobPollTextRekognitionFunctionTextDetectionLambda3ED9C32A",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TextDetectionJobGetTextRekognitionFunctionTextDetectionLambda9A851EBD",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TextDetectionJobGetTextRekognitionFunctionTextDetectionLambda9A851EBD",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StateMachineRoleDefaultPolicyDF1E6607",
        "Roles": [
          {
            "Ref": "StateMachineRoleB840431D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TextDetectionJobAmazonRekognitionTextDetectionComplete939381FA": {
      "Properties": {
        "TopicName": "AmazonRekognitionTextDetectionComplete",
      },
      "Type": "AWS::SNS::Topic",
    },
    "TextDetectionJobGetTextRekognitionFunctionTextDetectionLambda9A851EBD": {
      "DependsOn": [
        "TextDetectionJobGetTextRekognitionFunctionTextDetectionLambdaServiceRoleDefaultPolicy7D84C117",
        "TextDetectionJobGetTextRekognitionFunctionTextDetectionLambdaServiceRole27E16442",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "490866002ea920f56ec66039ba64d00d49fe43bb816cae3c1b95589d9c49fa52.zip",
        },
        "Environment": {
          "Variables": {
            "NODE_ENV": "test",
            "OUTPUT_BUCKET_NAME": {
              "Ref": "592850506235475190b9e887c6806fecD3824C20",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "TextDetectionJobGetTextRekognitionFunctionTextDetectionLambdaServiceRole27E16442",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "TextDetectionJobGetTextRekognitionFunctionTextDetectionLambdaLogRetention84F9C7F6": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "TextDetectionJobGetTextRekognitionFunctionTextDetectionLambda9A851EBD",
              },
            ],
          ],
        },
        "RetentionInDays": 14,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "TextDetectionJobGetTextRekognitionFunctionTextDetectionLambdaServiceRole27E16442": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TextDetectionJobGetTextRekognitionFunctionTextDetectionLambdaServiceRoleDefaultPolicy7D84C117": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "rekognition:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "s3:*",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TextDetectionJobGetTextRekognitionFunctionTextDetectionLambdaServiceRoleDefaultPolicy7D84C117",
        "Roles": [
          {
            "Ref": "TextDetectionJobGetTextRekognitionFunctionTextDetectionLambdaServiceRole27E16442",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TextDetectionJobPollTextRekognitionFunctionTextDetectionLambda3ED9C32A": {
      "DependsOn": [
        "TextDetectionJobPollTextRekognitionFunctionTextDetectionLambdaServiceRoleDefaultPolicy30942456",
        "TextDetectionJobPollTextRekognitionFunctionTextDetectionLambdaServiceRole42704142",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "2c859bb45afa2a76986119465abd95a76bf75363612b45a4ecf713bd8e0679b0.zip",
        },
        "Environment": {
          "Variables": {
            "NODE_ENV": "test",
            "SQS_QUEUE_URL": {
              "Ref": "TextDetectionJobTextDetectionQueueABF70773",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "TextDetectionJobPollTextRekognitionFunctionTextDetectionLambdaServiceRole42704142",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "TextDetectionJobPollTextRekognitionFunctionTextDetectionLambdaLogRetention53A379F7": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "TextDetectionJobPollTextRekognitionFunctionTextDetectionLambda3ED9C32A",
              },
            ],
          ],
        },
        "RetentionInDays": 14,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "TextDetectionJobPollTextRekognitionFunctionTextDetectionLambdaServiceRole42704142": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TextDetectionJobPollTextRekognitionFunctionTextDetectionLambdaServiceRoleDefaultPolicy30942456": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TextDetectionJobPollTextRekognitionFunctionTextDetectionLambdaServiceRoleDefaultPolicy30942456",
        "Roles": [
          {
            "Ref": "TextDetectionJobPollTextRekognitionFunctionTextDetectionLambdaServiceRole42704142",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TextDetectionJobStartTextRekognitionFunctionTextDetectionLambda274E9759": {
      "DependsOn": [
        "TextDetectionJobStartTextRekognitionFunctionTextDetectionLambdaServiceRoleDefaultPolicy96A4DD4E",
        "TextDetectionJobStartTextRekognitionFunctionTextDetectionLambdaServiceRoleCE2506B8",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "0ecdef4b762a2abd1363695134ed7e8520ae15b3bade4b26e5ecd6aa6112d363.zip",
        },
        "Environment": {
          "Variables": {
            "INPUT_BUCKET_NAME": {
              "Ref": "e7a353ffe4404cdaaebd940ffa81901f57F65707",
            },
            "NODE_ENV": "test",
            "ROLE_ARN_TO_ALLOW_REKOGNITION_TO_PUBLISH_TO_SNS_TOPIC": {
              "Fn::GetAtt": [
                "TextDetectionJobTextDetectionLambdaIamRoleForRekognition787B8EC6",
                "Arn",
              ],
            },
            "SNS_TOPIC_ARN_TO_BE_NOTIFIED_OF_COMPLETION": {
              "Ref": "TextDetectionJobAmazonRekognitionTextDetectionComplete939381FA",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "TextDetectionJobStartTextRekognitionFunctionTextDetectionLambdaServiceRoleCE2506B8",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "TextDetectionJobStartTextRekognitionFunctionTextDetectionLambdaLogRetentionB88D2038": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "TextDetectionJobStartTextRekognitionFunctionTextDetectionLambda274E9759",
              },
            ],
          ],
        },
        "RetentionInDays": 14,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "TextDetectionJobStartTextRekognitionFunctionTextDetectionLambdaServiceRoleCE2506B8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TextDetectionJobStartTextRekognitionFunctionTextDetectionLambdaServiceRoleDefaultPolicy96A4DD4E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "rekognition:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TextDetectionJobTextDetectionLambdaIamRoleForRekognition787B8EC6",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TextDetectionJobStartTextRekognitionFunctionTextDetectionLambdaServiceRoleDefaultPolicy96A4DD4E",
        "Roles": [
          {
            "Ref": "TextDetectionJobStartTextRekognitionFunctionTextDetectionLambdaServiceRoleCE2506B8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TextDetectionJobTextDetectionLambdaIamRoleForRekognition787B8EC6": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "rekognition.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonS3FullAccess",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSNSFullAccess",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSQSFullAccess",
              ],
            ],
          },
          "arn:aws:iam::aws:policy/service-role/AmazonRekognitionServiceRole",
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TextDetectionJobTextDetectionQueueABF70773": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "VisibilityTimeout": 300,
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "TextDetectionJobTextDetectionQueuePolicyB6AF2636": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Ref": "TextDetectionJobAmazonRekognitionTextDetectionComplete939381FA",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "sns.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "TextDetectionJobTextDetectionQueueABF70773",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "TextDetectionJobTextDetectionQueueABF70773",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "TextDetectionJobTextDetectionQueuetestTextDetectionJobAmazonRekognitionTextDetectionComplete66B3ED762E0079B8": {
      "DependsOn": [
        "TextDetectionJobTextDetectionQueuePolicyB6AF2636",
      ],
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "TextDetectionJobTextDetectionQueueABF70773",
            "Arn",
          ],
        },
        "Protocol": "sqs",
        "TopicArn": {
          "Ref": "TextDetectionJobAmazonRekognitionTextDetectionComplete939381FA",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "TranscribeJobGetTranscribeFunctionTranscribeLambdaCBE9E409": {
      "DependsOn": [
        "TranscribeJobGetTranscribeFunctionTranscribeLambdaServiceRoleDefaultPolicy92CBD3F7",
        "TranscribeJobGetTranscribeFunctionTranscribeLambdaServiceRole8FDA8D9B",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "cc93567fc18a6ba9179b55905c89c1a322163087cb28c4a47381e8c6792a999f.zip",
        },
        "Environment": {
          "Variables": {
            "NODE_ENV": "test",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "TranscribeJobGetTranscribeFunctionTranscribeLambdaServiceRole8FDA8D9B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "TranscribeJobGetTranscribeFunctionTranscribeLambdaLogRetention0DC70AFF": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "TranscribeJobGetTranscribeFunctionTranscribeLambdaCBE9E409",
              },
            ],
          ],
        },
        "RetentionInDays": 14,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "TranscribeJobGetTranscribeFunctionTranscribeLambdaServiceRole8FDA8D9B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TranscribeJobGetTranscribeFunctionTranscribeLambdaServiceRoleDefaultPolicy92CBD3F7": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "transcribe:*",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TranscribeJobGetTranscribeFunctionTranscribeLambdaServiceRoleDefaultPolicy92CBD3F7",
        "Roles": [
          {
            "Ref": "TranscribeJobGetTranscribeFunctionTranscribeLambdaServiceRole8FDA8D9B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TranscribeJobStartTranscribeFunctionTranscribeLambdaCDD50764": {
      "DependsOn": [
        "TranscribeJobStartTranscribeFunctionTranscribeLambdaServiceRoleDefaultPolicy49923977",
        "TranscribeJobStartTranscribeFunctionTranscribeLambdaServiceRole1B7F91B1",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "da4e07ba8df23ca8a82fa7577d2e09788a497a0b05b414432f111239a271d5bc.zip",
        },
        "Environment": {
          "Variables": {
            "INPUT_BUCKET_NAME": {
              "Ref": "e7a353ffe4404cdaaebd940ffa81901f57F65707",
            },
            "NODE_ENV": "test",
            "OUTPUT_BUCKET_NAME": {
              "Ref": "592850506235475190b9e887c6806fecD3824C20",
            },
            "ROLE_ARN": {
              "Fn::GetAtt": [
                "TranscribeJobTranscribeLambdaIamRoleForTranscribe229D8C22",
                "Arn",
              ],
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "TranscribeJobStartTranscribeFunctionTranscribeLambdaServiceRole1B7F91B1",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "TranscribeJobStartTranscribeFunctionTranscribeLambdaLogRetentionD73B4FC6": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "TranscribeJobStartTranscribeFunctionTranscribeLambdaCDD50764",
              },
            ],
          ],
        },
        "RetentionInDays": 14,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "TranscribeJobStartTranscribeFunctionTranscribeLambdaServiceRole1B7F91B1": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TranscribeJobStartTranscribeFunctionTranscribeLambdaServiceRoleDefaultPolicy49923977": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "transcribe:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TranscribeJobTranscribeLambdaIamRoleForTranscribe229D8C22",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TranscribeJobStartTranscribeFunctionTranscribeLambdaServiceRoleDefaultPolicy49923977",
        "Roles": [
          {
            "Ref": "TranscribeJobStartTranscribeFunctionTranscribeLambdaServiceRole1B7F91B1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TranscribeJobTranscribeLambdaIamRoleForTranscribe229D8C22": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "transcribe.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonS3FullAccess",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "VttFunctionVttLambdaC532D846": {
      "DependsOn": [
        "VttFunctionVttLambdaServiceRoleDefaultPolicy53FF57AE",
        "VttFunctionVttLambdaServiceRole80A097EE",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "caa05734f6d7f11e8076f184deb604f0c54e11fe1a6ffa3ca210e1d773044cfd.zip",
        },
        "Environment": {
          "Variables": {
            "NODE_ENV": "test",
            "S3_BUCKET_NAME": {
              "Ref": "592850506235475190b9e887c6806fecD3824C20",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "VttFunctionVttLambdaServiceRole80A097EE",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "VttFunctionVttLambdaLogRetention6D45AF0F": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "VttFunctionVttLambdaC532D846",
              },
            ],
          ],
        },
        "RetentionInDays": 14,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "VttFunctionVttLambdaServiceRole80A097EE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "VttFunctionVttLambdaServiceRoleDefaultPolicy53FF57AE": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "VttFunctionVttLambdaServiceRoleDefaultPolicy53FF57AE",
        "Roles": [
          {
            "Ref": "VttFunctionVttLambdaServiceRole80A097EE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "e7a353ffe4404cdaaebd940ffa81901f57F65707": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "BucketName": "e7a353ff-e440-4cda-aebd-940ffa81901f",
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "e7a353ffe4404cdaaebd940ffa81901fAutoDeleteObjectsCustomResource0C58850B": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "e7a353ffe4404cdaaebd940ffa81901fPolicyA3F8D6A8",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "e7a353ffe4404cdaaebd940ffa81901f57F65707",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "e7a353ffe4404cdaaebd940ffa81901fNotificationsC1080D73": {
      "DependsOn": [
        "e7a353ffe4404cdaaebd940ffa81901fPolicyA3F8D6A8",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "e7a353ffe4404cdaaebd940ffa81901f57F65707",
        },
        "Managed": true,
        "NotificationConfiguration": {
          "EventBridgeConfiguration": {},
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn",
          ],
        },
        "SkipDestinationValidation": false,
      },
      "Type": "Custom::S3BucketNotifications",
    },
    "e7a353ffe4404cdaaebd940ffa81901fPolicyA3F8D6A8": {
      "Properties": {
        "Bucket": {
          "Ref": "e7a353ffe4404cdaaebd940ffa81901f57F65707",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "e7a353ffe4404cdaaebd940ffa81901f57F65707",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "e7a353ffe4404cdaaebd940ffa81901f57F65707",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
